---
# (c) 2023 Thales Group. All rights reserved.
# Author: Anurag Jain, Developer Advocate, Thales
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

## Verify that integration_config was specified
- block:
  - assert:
      that:
        - this_node_connection_string is defined
        - new_group_name is defined
        - user_id is defined
        - client_id is defined

## Validate the operation add user to a group
- block:
  - name: "Add User to Group"
    thales.ciphertrust.group_add_remove_object:
      op_type: add
      object_type: user
      object_id: "{{ user_id }}"
      name: "{{ new_group_name }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_user

  - assert:
      that:
        - _result_add_user is not failed
        - _result_add_user.response.message is match("Resource created sucessfully")

## Validate the operation add client to a group
- block:
  - name: "Add Client to Group"
    thales.ciphertrust.group_add_remove_object:
      op_type: add
      object_type: client
      object_id: "{{ user_id }}"
      name: "{{ new_group_name }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_client

  - assert:
      that:
        - _result_add_client is not failed
        - _result_add_client.response.message is match("Resource created sucessfully")

## Validate the operation remove user from a group
- block:
  - name: "Remove User from Group"
    thales.ciphertrust.group_add_remove_object:
      op_type: remove
      object_type: user
      object_id: "{{ user_id }}"
      name: "{{ new_group_name }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_user

  - assert:
      that:
        - _result_add_user is not failed
        - _result_add_user.response is match("Resource deleted succesfully")

## Validate the operation remove client from a group
- block:
  - name: "Remove Client from Group"
    thales.ciphertrust.group_add_remove_object:
      op_type: remove
      object_type: client
      object_id: "{{ user_id }}"
      name: "{{ new_group_name }}"
      localNode: "{{ this_node_connection_string }}"
    register: _result_add_client

  - assert:
      that:
        - _result_add_client is not failed
        - _result_add_client.response is match("Resource deleted succesfully")